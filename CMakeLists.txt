cmake_minimum_required(VERSION 3.6)

project(adljack VERSION 1.0 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 14)
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address")

set(WITH_MIDI_SEQUENCER OFF CACHE STRING "")
set(WITH_MUS_SUPPORT OFF CACHE STRING "")
set(WITH_XMI_SUPPORT OFF CACHE STRING "")
set(libADLMIDI_STATIC ON CACHE STRING "")
set(libADLMIDI_SHARED OFF CACHE STRING "")
set(libOPNMIDI_STATIC ON CACHE STRING "")
set(libOPNMIDI_SHARED OFF CACHE STRING "")
add_subdirectory("thirdparty/libADLMIDI")
add_subdirectory("thirdparty/libOPNMIDI")

include(FindPkgConfig)
pkg_check_modules(JACK jack)

find_package(Curses)

## Jack version
if(NOT JACK_FOUND)
  message(WARNING "Jack not found. Not building ADL-jack.")
else()
  add_executable(adljack "sources/jackmain.cc" "sources/tui.cc" "sources/insnames.cc" "sources/common.cc")
  target_include_directories(adljack PRIVATE ${JACK_INCLUDE_DIRS})
  link_directories(${JACK_LIBRARY_DIRS})
  target_link_libraries(adljack PRIVATE ADLMIDI_static OPNMIDI_static ${JACK_LIBRARIES})
  if(CURSES_FOUND)
    target_compile_definitions(adljack PRIVATE "ADLJACK_USE_CURSES")
    target_include_directories(adljack PRIVATE ${CURSES_INCLUDE_DIRS})
    target_link_libraries(adljack PRIVATE ${CURSES_LIBRARIES})
  endif()
  install(TARGETS adljack DESTINATION "bin")
endif()

## Cross platform version
pkg_check_modules(RTAUDIO rtaudio)
pkg_check_modules(RTMIDI rtmidi)
if(NOT RTAUDIO_FOUND)
  message(WARNING "RtAudio not found. Not building ADL-rt.")
elseif(NOT RTMIDI_FOUND)
  message(WARNING "RtMidi not found. Not building ADL-rt.")
else()
  add_subdirectory("thirdparty/ring-buffer")
  add_executable(adlrt "sources/rtmain.cc" "sources/tui.cc" "sources/insnames.cc" "sources/common.cc")
  target_include_directories(adlrt PRIVATE ${RTAUDIO_INCLUDE_DIRS} ${RTMIDI_INCLUDE_DIRS})
  link_directories(${RTAUDIO_LIBRARY_DIRS} ${RTMIDI_LIBRARY_DIRS})
  target_link_libraries(adlrt PRIVATE ADLMIDI_static OPNMIDI_static ring_buffer ${RTAUDIO_LIBRARIES} ${RTMIDI_LIBRARIES})
  foreach(flag ${RTAUDIO_CFLAGS} ${RTMIDI_CFLAGS})
    if(flag MATCHES "^-D")
      target_compile_definitions(adlrt PRIVATE "${flag}")
    endif()
  endforeach()
  if(CURSES_FOUND)
    target_compile_definitions(adlrt PRIVATE "ADLJACK_USE_CURSES")
    target_include_directories(adlrt PRIVATE ${CURSES_INCLUDE_DIRS})
    target_link_libraries(adlrt PRIVATE ${CURSES_LIBRARIES})
  endif()
  install(TARGETS adlrt DESTINATION "bin")
endif()
